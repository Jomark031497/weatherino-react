{"version":3,"sources":["components/SearchForm.jsx","components/WeatherData.jsx","components/Home.jsx","App.js","index.js"],"names":["useStyles","makeStyles","theme","root","margin","display","switch","button","SearchForm","searchCity","classes","useState","city","setCity","isCelsius","setIsCelsius","Box","component","onSubmit","e","preventDefault","className","TextField","variant","label","value","onChange","target","size","required","FormControlLabel","control","Switch","checked","labelPlacement","Button","type","textAlign","temp","padding","background","WeatherData","weatherData","unit","Typography","country","Date","toLocaleDateString","temp_feels","weather_description","src","icon","alt","backgroundImage","backgroundSize","height","navbar","minHeight","Home","setWeatherData","setUnit","error","setError","searchedCity","a","fetch","mode","res","json","data","name","sys","Math","round","main","feels_like","weather","weather_condition","description","useEffect","Grid","container","justify","item","xs","alignItems","App","CssBaseline","createMuiTheme","typography","fontFamily","ReactDOM","render","StrictMode","ThemeProvider","document","getElementById"],"mappings":"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","file":"static/js/main.c96e3c46.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  Box,\r\n  TextField,\r\n  Button,\r\n  Switch,\r\n  FormControlLabel,\r\n} from \"@material-ui/core\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\n\r\nconst SearchForm = ({ searchCity }) => {\r\n  const classes = useStyles();\r\n  const [city, setCity] = useState(\"\");\r\n  const [isCelsius, setIsCelsius] = useState(true);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    searchCity(city, isCelsius);\r\n    setCity(\"\");\r\n  };\r\n  return (\r\n    <Box component=\"form\" onSubmit={handleSubmit} className={classes.root}>\r\n      <TextField\r\n        variant=\"outlined\"\r\n        label=\"City\"\r\n        value={city}\r\n        onChange={(e) => setCity(e.target.value)}\r\n        size=\"small\"\r\n        required\r\n      />\r\n\r\n      <FormControlLabel\r\n        value={isCelsius}\r\n        className={classes.switch}\r\n        control={\r\n          <Switch\r\n            checked={isCelsius}\r\n            onChange={() => setIsCelsius(!isCelsius)}\r\n          />\r\n        }\r\n        label={isCelsius ? \"C\" : \"F\"}\r\n        labelPlacement=\"end\"\r\n      />\r\n\r\n      <Button variant=\"outlined\" type=\"submit\" className={classes.button}>\r\n        <SearchIcon />\r\n      </Button>\r\n    </Box>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    margin: \"1rem\",\r\n    display: \"flex\",\r\n  },\r\n  switch: {\r\n    margin: \"auto 0.3rem\",\r\n  },\r\n  button: {\r\n    margin: \"auto 0.3rem\",\r\n  },\r\n}));\r\n\r\nexport default SearchForm;\r\n","import React from \"react\";\r\nimport { makeStyles, Typography } from \"@material-ui/core\";\r\n\r\nconst WeatherData = ({ weatherData, unit }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Typography variant=\"subtitle1\">{`${weatherData.city}, ${weatherData.country}`}</Typography>\r\n      <Typography variant=\"subtitle2\">\r\n        {new Date().toLocaleDateString()}\r\n      </Typography>\r\n      <div className={classes.temp}>\r\n        <Typography variant=\"h4\">{`${weatherData.temp}°${unit}`}</Typography>\r\n        <Typography variant=\"subtitle2\">{`Feels like ${weatherData.temp_feels}°${unit}`}</Typography>\r\n      </div>\r\n\r\n      <Typography variant=\"h5\">{`${weatherData.weather_description}`}</Typography>\r\n\r\n      <img\r\n        src={`https://openweathermap.org/img/wn/${weatherData.icon}@4x.png`}\r\n        alt=\"weather-icon\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    textAlign: \"center\",\r\n  },\r\n  temp: {\r\n    margin: \"1rem\",\r\n    padding: \"1rem\",\r\n    background: \"transparent\",\r\n  },\r\n}));\r\n\r\nexport default WeatherData;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Grid, Typography } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport SearchForm from \"./SearchForm\";\r\nimport WeatherData from \"./WeatherData\";\r\n\r\nconst Home = () => {\r\n  const [weatherData, setWeatherData] = useState();\r\n  const [unit, setUnit] = useState();\r\n  const [error, setError] = useState();\r\n  const classes = useStyles();\r\n\r\n  const searchedCity = async (city, temp) => {\r\n    const unit = temp ? \"metric\" : \"imperial\";\r\n    setError(\"\");\r\n    setUnit(unit);\r\n    try {\r\n      const res = await fetch(\r\n        `https://api.openweathermap.org/data/2.5/weather?q=${city}&units=${unit}&APPID=33b6c97cbe9b5cc44cfea7be5826600f`,\r\n        { mode: \"cors\" }\r\n      );\r\n      const data = await res.json();\r\n\r\n      setWeatherData({\r\n        city: data.name,\r\n        country: data.sys.country,\r\n        temp: Math.round(data.main.temp),\r\n        temp_feels: Math.round(data.main.feels_like),\r\n        icon: data.weather[0].icon,\r\n        weather_condition: data.weather[0].main,\r\n        weather_description: data.weather[0].description,\r\n      });\r\n    } catch (err) {\r\n      setError(\"No City Found\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    searchedCity(\"Manila\", \"metric\");\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div className={classes.root}>\r\n        <div className={classes.navbar}>\r\n          <Typography variant=\"h5\">Weatherino</Typography>\r\n        </div>\r\n        <Grid container justify=\"center\">\r\n          <Grid item container justify=\"center\" xs={12}>\r\n            <SearchForm searchCity={searchedCity} />\r\n          </Grid>\r\n          {error ? (\r\n            <div>{error}</div>\r\n          ) : (\r\n            <>\r\n              <Grid item container justify=\"center\" alignItems=\"center\" xs={12}>\r\n                {weatherData ? (\r\n                  <WeatherData\r\n                    weatherData={weatherData}\r\n                    unit={unit === \"metric\" ? \"C\" : \"F\"}\r\n                  />\r\n                ) : (\r\n                  <div> No data </div>\r\n                )}\r\n              </Grid>\r\n            </>\r\n          )}\r\n        </Grid>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: \"1rem\",\r\n    background: \"#ddd\",\r\n    backgroundImage: \"url(./images/background.jpg)\",\r\n    backgroundSize: \"100% 100%\",\r\n    height: \"100vh\",\r\n  },\r\n  navbar: {\r\n    minHeight: \"10vh\",\r\n    textAlign: \"center\",\r\n  },\r\n}));\r\n\r\nexport default Home;\r\n","import React from \"react\";\nimport { CssBaseline } from \"@material-ui/core/\";\n\nimport Home from \"./components/Home\";\nfunction App() {\n  return (\n    <>\n      <CssBaseline />\n      <div>\n        <Home />\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { ThemeProvider, createMuiTheme } from \"@material-ui/core\";\n\nconst theme = createMuiTheme({\n  typography: {\n    fontFamily: \"'Montserrat', sans-serif\",\n  },\n});\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}